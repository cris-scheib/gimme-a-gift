name: Build and deploy (api)
env:
  PROJECT: gimme-a-gift-api

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev, main]
    types: [closed]
  workflow_dispatch:

jobs:
  initialize:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    runs-on: [ubuntu-latest]
    outputs:
      STAGE: ${{ steps.get_stage.outputs.STAGE }}
      PORT: ${{ steps.get_stage.outputs.PORT }}
      IMAGE_NAME: ghcr.io/${{ github.repository }}/${{ env.PROJECT }}
      CONTAINER_NAME: ${{ env.PROJECT }}-${{ steps.get_stage.outputs.STAGE }}
    steps:
      - name: Get STAGE
        id: get_stage
        run: |
          if [[ $BASE_REF == "main" || $REF == "refs/heads/main" ]]
          then
              echo "::set-output name=STAGE::prod" && echo "::set-output name=PORT::3001"
          elif [[ $BASE_REF == "dev" || $REF == "refs/heads/dev" ]]
          then
              echo "::set-output name=STAGE::dev" && echo "::set-output name=PORT::3000"
          else
              echo "Invalid branch" && exit 1
          fi
        env:
          REF: ${{ github.ref }}
          BASE_REF: ${{ github.base_ref }}

  build:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    runs-on: [ubuntu-latest]
    needs: [initialize]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: cd api && npm ci

      - name: Run build script
        run: cd api && npm run build 

      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image
        uses: docker/build-push-action@v2
        with:
          context: api
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/${{ env.PROJECT }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}/${{ env.PROJECT }}:${{ needs.initialize.outputs.STAGE }}

  deploy:
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged == true
    runs-on: [ubuntu-latest]
    needs: [initialize, build]
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }} 
          name: github-actions
          known_hosts: unnecessary
          config: |
            Host server
              HostName ${{ secrets.SSH_HOST }}
              User ${{ secrets.SSH_USER }}
              Port 2201
              IdentityFile ~/.ssh/github-actions
              StrictHostKeyChecking no

      - name: Deploy image
        run: ssh server 'docker pull ${{ needs.initialize.outputs.IMAGE_NAME }}:${{ needs.initialize.outputs.STAGE }}'

      - name: Run stage container
        run: ssh server 'docker rm --force ${{ needs.initialize.outputs.CONTAINER_NAME }} && docker run -d -p ${{ needs.initialize.outputs.PORT }}:3000 --name ${{ needs.initialize.outputs.CONTAINER_NAME }} ${{ needs.initialize.outputs.IMAGE_NAME }}:${{ needs.initialize.outputs.STAGE }}'

      - name: Copy env file
        run: ssh server 'docker cp /home/univates/environments/api/.env.${{ needs.initialize.outputs.STAGE }} ${{ needs.initialize.outputs.CONTAINER_NAME }}:/home/app/api/.env'
